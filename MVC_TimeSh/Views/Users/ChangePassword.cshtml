@model MVC_TimeSh.Models.UpdatePasswordModel
@{
    ViewBag.Title = "Update Password";

    if (TempData["Success"] != null)
    {
        <div class="alert alert-success my-2">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Success: </strong> @TempData["Success"]
        </div>
    }
    if (TempData["Error"] != null)
    {
        <div class="alert alert-danger my-2">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            <strong>Error: </strong> @TempData["Error"]
        </div>
    }
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="jumbotron text-center">
        <h2>Update Super Admin Password</h2>
    </div>
    <hr />
    <div class="panel">
        <div class="panel-heading panel-blue">
            <h4>Choose your new password</h4>
        </div>
        <div class="panel-body">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.UserId)

            <div class="form-group">
                @Html.LabelFor(model => model.Username,
                 htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes =
                     new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Username,
                     "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CurrentPassword,
                 htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CurrentPassword,
                     new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CurrentPassword,
                     "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Password,
                 htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password,
                     new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password,
                     "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword,
                 htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword,
                     new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword,
                     "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Dashboard", "UserDashboard", "Users", null, new { @class = "btn btn-info" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
